server                 = AdHocProtocol.unirail.org:443
#server                = http://AdHocProtocol.unirail.org

#path to the protocol description file
description_file_path  = /etc/my_protocol_description.java

#change login to some yours identifier
login                  = anonymous

#Specifies the source code path to search for class or interface definitions. As with the user class path,
# source path entries are separated by colons (:) on Unix and semicolons(;) on Windows and can be directories
# it's include path to the directory with 'org', top AdHoc annotations directory inside. https://github.com/cheblin/AdHoc/tree/master/org/unirail/AdHoc
# read https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javac.html
#classpath           = C:\\ad_hoc_annotations, D:\\other\\dir, C:\\more\\dirs
classpath              = /etc/Agent/bin/AdHocAgent.jar, /other/included/src, /more/dirs

#==================== DEPLOYMENT SECTION ==============================
#InC._HOST_NAME_.-->>   : /dst/folder1 , ../../dst/folder2 ...
#InCPP._HOST_NAME_.-->> : /dst/folder1 , ../../dst/folder2 ...
#InCS._HOST_NAME_.-->>  : /dst/folder1 , ../../dst/folder2 ...
#InTS._HOST_NAME_.-->>  : /dst/folder1 , ../../dst/folder2 ...
#InKT._HOST_NAME_.-->>  : /dst/folder1 , ../../dst/folder2 ...
#InRS._HOST_NAME_.-->>  : /dst/folder1 , ../../dst/folder2 ...